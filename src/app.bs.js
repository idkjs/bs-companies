// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Block                        = require("bs-platform/lib/js/block.js");
var Curry                        = require("bs-platform/lib/js/curry.js");
var React                        = require("react");
var ReasonReact                  = require("reason-react/src/ReasonReact.js");
var Header$ReactTemplate         = require("./header.bs.js");
var CompanyList$ReactTemplate    = require("./companyList.bs.js");
var SearchResults$ReactTemplate  = require("./searchResults.bs.js");
var CompanyService$ReactTemplate = require("./companyService.bs.js");

var component = ReasonReact.reducerComponent("App");

function selectCompany(reduce, companyName) {
  console.log(companyName);
  CompanyService$ReactTemplate.fetchEmployees(companyName).then((function (employees) {
          Curry._2(reduce, (function () {
                  return /* EmployeesLoaded */Block.__(1, [
                            employees,
                            companyName
                          ]);
                }), /* () */0);
          return Promise.resolve(/* () */0);
        }));
  return /* () */0;
}

function loadCompanies(reduce) {
  CompanyService$ReactTemplate.fetchCompanies(/* () */0).then((function (companies) {
          Curry._2(reduce, (function () {
                  return /* CompaniesLoaded */Block.__(0, [companies]);
                }), /* () */0);
          return Promise.resolve(/* () */0);
        }));
  return /* () */0;
}

function updateQuery(reduce, query) {
  return Curry._2(reduce, (function () {
                return /* QueryUpdated */Block.__(3, [query]);
              }), /* () */0);
}

function executeQuery(reduce, query) {
  CompanyService$ReactTemplate.fetchSearch(query).then((function (results) {
          Curry._2(reduce, (function () {
                  return /* SearchResultsLoaded */Block.__(2, [results]);
                }), /* () */0);
          return Promise.resolve(/* () */0);
        }));
  return /* () */0;
}

function make() {
  var newrecord = component.slice();
  newrecord[/* didMount */4] = (function (param) {
      loadCompanies(param[/* reduce */1]);
      return /* NoUpdate */0;
    });
  newrecord[/* render */9] = (function (param) {
      var state = param[/* state */2];
      var reduce = param[/* reduce */1];
      var match = +(state[/* query */3] !== "");
      return React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, Header$ReactTemplate.make(state[/* query */3], (function ($$event) {
                            var query = $$event.target.value;
                            Curry._2(reduce, (function () {
                                    return /* QueryUpdated */Block.__(3, [query]);
                                  }), /* () */0);
                            return executeQuery(reduce, query);
                          }), (function () {
                            return executeQuery(reduce, state[/* query */3]);
                          }), /* array */[])), match !== 0 ? ReasonReact.element(/* None */0, /* None */0, SearchResults$ReactTemplate.make(state[/* results */4], /* array */[])) : ReasonReact.element(/* None */0, /* None */0, CompanyList$ReactTemplate.make(state[/* companies */0], state[/* employees */1], state[/* selectedCompany */2], (function (name) {
                              return selectCompany(reduce, name);
                            }), /* array */[])));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* companies : [] */0,
              /* employees : [] */0,
              /* selectedCompany */"",
              /* query */"",
              /* results : [] */0
            ];
    });
  newrecord[/* reducer */12] = (function (action, state) {
      switch (action.tag | 0) {
        case 0 : 
            return /* Update */Block.__(0, [/* record */[
                        /* companies */action[0],
                        /* employees */state[/* employees */1],
                        /* selectedCompany */state[/* selectedCompany */2],
                        /* query */state[/* query */3],
                        /* results */state[/* results */4]
                      ]]);
        case 1 : 
            return /* Update */Block.__(0, [/* record */[
                        /* companies */state[/* companies */0],
                        /* employees */action[0],
                        /* selectedCompany */action[1],
                        /* query */"",
                        /* results : [] */0
                      ]]);
        case 2 : 
            return /* Update */Block.__(0, [/* record */[
                        /* companies */state[/* companies */0],
                        /* employees */state[/* employees */1],
                        /* selectedCompany */state[/* selectedCompany */2],
                        /* query */state[/* query */3],
                        /* results */action[0]
                      ]]);
        case 3 : 
            return /* Update */Block.__(0, [/* record */[
                        /* companies */state[/* companies */0],
                        /* employees */state[/* employees */1],
                        /* selectedCompany */state[/* selectedCompany */2],
                        /* query */action[0],
                        /* results */state[/* results */4]
                      ]]);
        
      }
    });
  return newrecord;
}

exports.component     = component;
exports.selectCompany = selectCompany;
exports.loadCompanies = loadCompanies;
exports.updateQuery   = updateQuery;
exports.executeQuery  = executeQuery;
exports.make          = make;
/* component Not a pure module */
